apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'application'
apply plugin: 'docker'
apply plugin: 'eclipse'
apply plugin: 'license'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'


repositories {
    mavenCentral()
    jcenter()
    mavenLocal()
    "http://repo.spring.io/milestone"
    "http://repo.spring.io/libs-release-remote/"
}

sourceSets {
    site {
        resources {
            srcDir 'site'
        }
    }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web:1.3.0.M4"
    compile "org.springframework.boot:spring-boot-starter-security:1.3.0.M4"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:1.3.0.M4"
    compile "org.springframework.boot:spring-boot-devtools:1.3.0.M4"

	testCompile "org.springframework.boot:spring-boot-starter-test:1.3.0.M4"
    testCompile "com.jayway.restassured:rest-assured:2.5.0"

	compile 'mysql:mysql-connector-java:5.1.34'
    compile "javax.validation:validation-api:1.1.0.Final"

    compile "io.springfox:springfox-swagger2:2.2.2"
    compile 'io.springfox:springfox-swagger-ui:2.2.2'
    compile "io.springfox:springfox-core:2.2.2"
    compile "io.springfox:springfox-spi:2.2.2"
    compile "io.springfox:springfox-spring-web:2.2.2"

	//Connector Deps
    compile "joda-time:joda-time:2.8.1"
    compile "net.sf.ehcache:ehcache:2.8.4"
    compile "org.apache.tomcat.embed:tomcat-embed-jasper:8.0.23"
    compile "com.amazonaws:aws-java-sdk:1.10.52"

}


buildscript {
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.6.RELEASE")
        classpath 'se.transmode.gradle:gradle-docker:1.2'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
        classpath 'us.carrclan.david.gradle:gradle-site-plugin:0.2.0'
    }

    repositories {
        mavenCentral()
        jcenter()
        "http://repo.spring.io/snapshot"
        "http://repo.spring.io/milestone"
        "http://repo.spring.io/plugins-release/"
    }
    // ...
}

// Docker
docker {
    baseImage = 'nathonfowlie/centos-jre:1.8.0_60'
}

//TODO: Review do we need it, we may not need the following for now. But having as backup.
// Using default database for our design.
task distDockerDB(type: Docker) {
	baseImage = 'postgres:9.4.5'
    applicationName = 'conflux-pg-db'
    // 9.4.5 is postgres supported version, b1 is the version of our internal change
    // TODO: Change the b1 to dynamic build bumber, "${project.group}/${applicationName}:${tagVersion}"
    tagVersion = '9.4.5-b1'
    // addFile "pg-init.sh", "/docker-entrypoint-initdb.d"
    //setEnv "POSTGRES_DB", "conflux"
    exposePort 5432
}

pmd {
  ignoreFailures = true
  sourceSets = [sourceSets.main]
}

checkstyle {
  ignoreFailures = true
}

findbugs {
  ignoreFailures = true
}
